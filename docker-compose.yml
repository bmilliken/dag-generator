# Full Stack Docker Compose for DAG Generator
#
# This will orchestrate both backend and frontend services when frontend is ready.
# For now, it just runs the backend service.

version: '3.8'

services:
  # Backend API Service
  backend:
    build: ./backend
    container_name: dag-generator-backend
    ports:
      - "5002:5002"
    volumes:
      - ./projects:/app/projects:rw           # Read-write for live changes
      - ./backend:/app:rw                     # Mount source code for development
    environment:
      - FLASK_ENV=development                 # Enable development mode
      - FLASK_DEBUG=1                        # Enable debug mode
      - PYTHONPATH=/app
    restart: unless-stopped
    command: ["python", "api/dag_api.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dag-generator-frontend
    ports:
      - "3000:5173"                          # Map to Vite's dev port
    volumes:
      - ./frontend/src:/app/src:rw           # Mount source for live reloading
      - ./frontend/public:/app/public:rw     # Mount public assets
      - /app/node_modules                    # Preserve node_modules
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:5002
    restart: unless-stopped
    stdin_open: true
    tty: true
